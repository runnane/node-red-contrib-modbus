"use strict";module.exports=function(s){require("source-map-support").install();var r=require("./modbus-basics"),o=require("./core/modbus-core"),a=require("./core/modbus-io-core"),n=require("debug")("contribModbus:poller");s.nodes.registerType("modbus-flex-sequencer",function(e){s.nodes.createNode(this,e),this.name=e.name,this.sequences=e.sequences,this.showStatusActivities=e.showStatusActivities,this.showErrors=e.showErrors,this.connection=null,this.useIOFile=e.useIOFile,this.ioFile=s.nodes.getNode(e.ioFile),this.useIOForPayload=e.useIOForPayload,this.logIOActivities=e.logIOActivities,this.emptyMsgOnFail=e.emptyMsgOnFail,this.keepMsgProperties=e.keepMsgProperties,this.internalDebugLog=n,this.verboseLogging=s.settings.verbose;var t=this;t.bufferMessageList=new Map,r.setNodeStatusTo("waiting",t);var i=s.nodes.getNode(e.server);i&&(i.registerForModbus(t),r.initModbusClientEvents(t,i),t.onModbusReadDone=function(e,s){t.showStatusActivities&&r.setNodeStatusTo("reading done",t),t.send(a.buildMessageWithIO(t,e.data,e,s)),t.emit("modbusFlexSequencerNodeDone")},t.errorProtocolMsg=function(e,s){r.logMsgError(t,e,s),r.sendEmptyMsgOnFail(t,e,s)},t.onModbusReadError=function(e,s){t.internalDebugLog(e.message);s=o.getOriginalMessage(t.bufferMessageList,s);t.errorProtocolMsg(e,s),r.setModbusError(t,i,e,s),t.emit("modbusFlexSequencerNodeError")},t.prepareMsg=function(e){switch((e="string"==typeof e?JSON.parse(e):e).fc){case"FC1":e.fc=1;break;case"FC2":e.fc=2;break;case"FC3":e.fc=3;break;case"FC4":e.fc=4}return e.unitid=parseInt(e.unitid),e.address=parseInt(e.address)||0,e.quantity=parseInt(e.quantity)||1,e},t.isValidModbusMsg=function(e){var s=!0;return Number.isInteger(e.unitid)&&0<=e.unitid&&e.unitid<=255||(t.error("Unit ID Not Valid",e),s&=!1),!s||Number.isInteger(e.address)&&0<=e.address&&e.address<=65535||(t.error("Address Not Valid",e),s&=!1),!s||Number.isInteger(e.quantity)&&1<=e.quantity&&e.quantity<=65535||(t.error("Quantity Not Valid",e),s&=!1),s},t.buildNewMessageObject=function(e,s){var t=o.getObjectId();return{topic:s.topic||e.id,messageId:t,payload:{name:s.name,unitid:s.unitid,fc:s.fc,address:s.address,quantity:s.quantity,emptyMsgOnFail:e.emptyMsgOnFail,keepMsgProperties:e.keepMsgProperties,messageId:t}}},t.on("input",function(e){if(i.client){var s=Object.assign({},e),e=(r.invalidSequencesIn(e)?t:e).sequences;try{e.forEach(function(e){var s=t.prepareMsg(e);t.isValidModbusMsg(s)&&(e=t.buildNewMessageObject(t,s),t.bufferMessageList.set(e.messageId,r.buildNewMessage(t.keepMsgProperties,s,e)),i.emit("readModbus",e,t.onModbusReadDone,t.onModbusReadError))})}catch(e){t.errorProtocolMsg(e,s)}t.showStatusActivities&&r.setNodeStatusTo(i.actualServiceState,t)}}),t.on("close",function(e){r.setNodeStatusTo("closed",t),t.bufferMessageList.clear(),i.deregisterForModbus(t.id,e)}),t.showStatusActivities||r.setNodeDefaultStatus(t))})};
//# sourceMappingURL=maps/modbus-flex-sequencer.js.map
